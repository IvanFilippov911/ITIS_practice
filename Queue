class Queue
{
    private int[] array;

    public Queue() => array = new int[5];

    public Queue(int lenght) => array = new int[lenght];

    private int start = -1;
    private int end = -1;
    private int countPush = 0;

    public void Enqueue(int value)
    {
        if (countPush >= array.Length)
        {
            array = Expansion(array);
            start = 0;
            end = countPush - 1;
        }

        if (end == array.Length - 1)
        {
            end = 0;
            array[end] = value;
            countPush++;
        }
        else
        {
            end++;
            array[end] = value;
            countPush++;
        }
        if (countPush == 1 && array[0] == 1) start = 0;
    }

    public int Dequeue()
    {
        if (countPush == 0) throw new Exception("There are no elements on the stack");
        else if (start == end)
        {
            array[start] = 0;
            start = -1;
            end = -1;
            countPush = 0;
        }
        var result = array[start];
        array[start] = 0;
        start++;
        countPush--;
        return result;
    }

    public int[] Expansion(int[] array)
    {
        var newArray = new int[array.Length * 2];
        var index = 0;
        for (int element = array[start]; element < array[end] + 1; element++)
        {
            newArray[index] = element;
            index++;
        }
        return newArray;
    }

    public void Print()
    {
        foreach (var element in array)
            Console.Write($"{element} ");
        Console.WriteLine("\n");
    }
}
